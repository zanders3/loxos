//AST(rettype, parent, name, vars)

AST(void, Expr, Assign, const Token* name; UniquePtr<Expr> value;)
AST(void, Expr, Binary, UniquePtr<Expr> left; const Token* op; UniquePtr<Expr> right;)
AST(void, Expr, Call, UniquePtr<Expr> callee; const Token* paren; Array<UniquePtr<Expr>> args;)
AST(void, Expr, Grouping, UniquePtr<Expr> expr;)
AST(void, Expr, Literal, Value value;)
AST(void, Expr, Logical, UniquePtr<Expr> left; const Token* op; UniquePtr<Expr> right;)
AST(void, Expr, Unary, const Token* op; UniquePtr<Expr> right;)
AST(void, Expr, Variable, const Token* name;)

AST(void, Stmt, Block, Array<UniquePtr<Stmt>> stmts;)
AST(void, Stmt, Expression, UniquePtr<Expr> expr;)
AST(void, Stmt, Function, const Token* name; Array<const Token*> params; Array<UniquePtr<Stmt>> body;)
AST(void, Stmt, If, UniquePtr<Expr> condition; UniquePtr<Stmt> thenBranch; UniquePtr<Stmt> elseBranch;)
AST(void, Stmt, Print, UniquePtr<Expr> expr;)
AST(void, Stmt, Return, const Token* keyword; UniquePtr<Expr> value;)
AST(void, Stmt, Var, const Token* name; UniquePtr<Expr> initializer;)
AST(void, Stmt, While, UniquePtr<Expr> condition; UniquePtr<Stmt> body;)
